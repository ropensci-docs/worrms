[{"path":[]},{"path":"https://docs.ropensci.org/worrms/CONTRIBUTING.html","id":"bugs","dir":"","previous_headings":"","what":"Bugs?","title":"CONTRIBUTING","text":"Submit issue Issues page","code":""},{"path":"https://docs.ropensci.org/worrms/CONTRIBUTING.html","id":"issues-and-pull-requests","dir":"","previous_headings":"","what":"Issues and Pull Requests","title":"CONTRIBUTING","text":"considering pull request, may want open issue first discuss maintainer(s).","code":""},{"path":"https://docs.ropensci.org/worrms/CONTRIBUTING.html","id":"code-contributions","dir":"","previous_headings":"","what":"Code contributions","title":"CONTRIBUTING","text":"Fork repo GitHub account Clone version account machine account, e.g,. git clone https://github.com/<yourgithubusername>/worrms.git Make sure track progress upstream (.e., version worrms ropensci/worrms) git remote add upstream https://github.com/ropensci/worrms.git. making changes make sure pull changes upstream either git fetch upstream merge later git pull upstream fetch merge one step Make changes (bonus points making changes new feature branch - see https://guides.github.com/introduction/flow/ contribute branching, making changes, submitting pull request) Push account Submit pull request home base (likely master branch, check make sure) ropensci/worrms","code":""},{"path":"https://docs.ropensci.org/worrms/CONTRIBUTING.html","id":"discussion-forum","dir":"","previous_headings":"","what":"Discussion forum","title":"CONTRIBUTING","text":"Check discussion forum think issue requires longer form discussion.","code":""},{"path":"https://docs.ropensci.org/worrms/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2020 Scott Chamberlain Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"install","dir":"Articles","previous_headings":"","what":"Install","title":"Introduction to worrms","text":"Stable version CRAN Development version GitHub","code":"install.packages(\"worrms\") install.packages(\"remotes\") remotes::install_github(\"ropensci/worrms\") library(\"worrms\")"},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"get-records","dir":"Articles","previous_headings":"","what":"Get records","title":"Introduction to worrms","text":"WoRMS ‘records’ taxa, specimen occurrences something else. date taxonomic name many names common name using TAXMATCH algorithm","code":"wm_records_date('2016-12-23T05:59:45+00:00') #> # A tibble: 50 x 27 #>    AphiaID url   scientificname authority status unacceptreason taxonRankID #>      <int> <chr> <chr>          <chr>     <chr>  <lgl>                <int> #>  1  894302 http… Paleopolymorp… Vasilenk… accep… NA                     220 #>  2  894296 http… Parapachyphlo… Miklukho… accep… NA                     220 #>  3  894298 http… Parapachyphlo… Miklukho… accep… NA                     220 #>  4  894301 http… Ovulina radia… Seguenza… accep… NA                     220 #>  5  894299 http… Parafissurina… Petri, 1… accep… NA                     220 #>  6  894297 http… Parapachyphlo… Miklukho… accep… NA                     220 #>  7  919684 http… Flintina serr… Cuvillie… accep… NA                     220 #>  8  906465 http… Verneuilinoid… Bartenst… accep… NA                     220 #>  9  903640 http… Quinqueloculi… Hussey, … accep… NA                     220 #> 10  917580 http… Orbitolina ra… Sahni & … accep… NA                     220 #> # … with 40 more rows, and 20 more variables: rank <chr>, valid_AphiaID <int>, #> #   valid_name <chr>, valid_authority <chr>, parentNameUsageID <int>, #> #   kingdom <chr>, phylum <chr>, class <chr>, order <chr>, family <chr>, #> #   genus <chr>, citation <chr>, lsid <chr>, isMarine <int>, isBrackish <lgl>, #> #   isFreshwater <lgl>, isTerrestrial <lgl>, isExtinct <int>, match_type <chr>, #> #   modified <chr> wm_records_name(name = 'Leucophaeus scoresbii') #> # A tibble: 1 x 27 #>   AphiaID url   scientificname authority status unacceptreason taxonRankID rank  #>     <int> <chr> <chr>          <chr>     <chr>  <lgl>                <int> <chr> #> 1  344089 http… Leucophaeus s… Traill, … accep… NA                     220 Spec… #> # … with 19 more variables: valid_AphiaID <int>, valid_name <chr>, #> #   valid_authority <chr>, parentNameUsageID <int>, kingdom <chr>, #> #   phylum <chr>, class <chr>, order <chr>, family <chr>, genus <chr>, #> #   citation <chr>, lsid <chr>, isMarine <int>, isBrackish <lgl>, #> #   isFreshwater <lgl>, isTerrestrial <lgl>, isExtinct <lgl>, match_type <chr>, #> #   modified <chr> wm_records_names(name = c('Leucophaeus scoresbii', 'Coryphaena')) #> [[1]] #> # A tibble: 1 x 27 #>   AphiaID url   scientificname authority status unacceptreason taxonRankID rank  #>     <int> <chr> <chr>          <chr>     <chr>  <lgl>                <int> <chr> #> 1  344089 http… Leucophaeus s… Traill, … accep… NA                     220 Spec… #> # … with 19 more variables: valid_AphiaID <int>, valid_name <chr>, #> #   valid_authority <chr>, parentNameUsageID <int>, kingdom <chr>, #> #   phylum <chr>, class <chr>, order <chr>, family <chr>, genus <chr>, #> #   citation <chr>, lsid <chr>, isMarine <int>, isBrackish <lgl>, #> #   isFreshwater <lgl>, isTerrestrial <lgl>, isExtinct <lgl>, match_type <chr>, #> #   modified <chr> #>  #> [[2]] #> # A tibble: 2 x 27 #>   AphiaID url   scientificname authority status unacceptreason taxonRankID rank  #>     <int> <chr> <chr>          <chr>     <chr>  <chr>                <int> <chr> #> 1  125960 http… Coryphaena     Linnaeus… accep… <NA>                   180 Genus #> 2  843430 <NA>  <NA>           <NA>      quara… synonym                 NA <NA>  #> # … with 19 more variables: valid_AphiaID <int>, valid_name <chr>, #> #   valid_authority <chr>, parentNameUsageID <int>, kingdom <chr>, #> #   phylum <chr>, class <chr>, order <chr>, family <chr>, genus <chr>, #> #   citation <chr>, lsid <chr>, isMarine <int>, isBrackish <int>, #> #   isFreshwater <int>, isTerrestrial <int>, isExtinct <lgl>, match_type <chr>, #> #   modified <chr> wm_records_common(name = 'clam') #> # A tibble: 4 x 27 #>   AphiaID url   scientificname authority status unacceptreason taxonRankID rank  #>     <int> <chr> <chr>          <chr>     <chr>  <lgl>                <int> <chr> #> 1  141919 http… Mercenaria me… (Linnaeu… accep… NA                     220 Spec… #> 2  140431 http… Mya truncata   Linnaeus… accep… NA                     220 Spec… #> 3  141936 http… Venus verruco… Linnaeus… accep… NA                     220 Spec… #> 4  575771 http… Verpa penis    (Linnaeu… accep… NA                     220 Spec… #> # … with 19 more variables: valid_AphiaID <int>, valid_name <chr>, #> #   valid_authority <chr>, parentNameUsageID <int>, kingdom <chr>, #> #   phylum <chr>, class <chr>, order <chr>, family <chr>, genus <chr>, #> #   citation <chr>, lsid <chr>, isMarine <int>, isBrackish <lgl>, #> #   isFreshwater <lgl>, isTerrestrial <lgl>, isExtinct <lgl>, match_type <chr>, #> #   modified <chr> wm_records_taxamatch(name = 'Leucophaeus scoresbii') #> [[1]] #> # A tibble: 1 x 27 #>   AphiaID url   scientificname authority status unacceptreason taxonRankID rank  #>     <int> <chr> <chr>          <chr>     <chr>  <lgl>                <int> <chr> #> 1  344089 http… Leucophaeus s… Traill, … accep… NA                     220 Spec… #> # … with 19 more variables: valid_AphiaID <int>, valid_name <chr>, #> #   valid_authority <chr>, parentNameUsageID <int>, kingdom <chr>, #> #   phylum <chr>, class <chr>, order <chr>, family <chr>, genus <chr>, #> #   citation <chr>, lsid <chr>, isMarine <int>, isBrackish <lgl>, #> #   isFreshwater <lgl>, isTerrestrial <lgl>, isExtinct <lgl>, match_type <chr>, #> #   modified <chr>"},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"aphia-id-name","dir":"Articles","previous_headings":"","what":"APHIA ID <–> name","title":"Introduction to worrms","text":"","code":"wm_name2id(name = \"Rhincodon\") #> [1] 105749 wm_id2name(id = 105706) #> [1] \"Rhincodontidae\""},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"get-aphiaid-via-an-external-id","dir":"Articles","previous_headings":"","what":"Get AphiaID via an external ID","title":"Introduction to worrms","text":"","code":"wm_external(id = 1080) #> [1] 85257 wm_external(id = 105706) #> [1] 159854"},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"get-vernacular-names-from-an-aphiaid","dir":"Articles","previous_headings":"","what":"Get vernacular names from an AphiaID","title":"Introduction to worrms","text":"","code":"wm_common_id(id = 156806) #> # A tibble: 2 x 3 #>   vernacular          language_code language #>   <chr>               <chr>         <chr>    #> 1 gilded wedgeclam    eng           English  #> 2 Turton's wedge clam eng           English"},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"children","dir":"Articles","previous_headings":"","what":"Children","title":"Introduction to worrms","text":"Get direct taxonomic children AphiaID","code":"wm_classification(id = 105706) #> # A tibble: 11 x 3 #>    AphiaID rank       scientificname   #>      <int> <chr>      <chr>            #>  1       2 Kingdom    Animalia         #>  2    1821 Phylum     Chordata         #>  3  146419 Subphylum  Vertebrata       #>  4    1828 Superclass Gnathostomata    #>  5   11676 Superclass Pisces           #>  6   10193 Class      Elasmobranchii   #>  7  368407 Subclass   Neoselachii      #>  8  368408 Infraclass Selachii         #>  9  368410 Superorder Galeomorphi      #> 10   10208 Order      Orectolobiformes #> 11  105706 Family     Rhincodontidae"},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"classification","dir":"Articles","previous_headings":"","what":"Classification","title":"Introduction to worrms","text":"Get classification AphiaID","code":"wm_classification(id = 105706) #> # A tibble: 11 x 3 #>    AphiaID rank       scientificname   #>      <int> <chr>      <chr>            #>  1       2 Kingdom    Animalia         #>  2    1821 Phylum     Chordata         #>  3  146419 Subphylum  Vertebrata       #>  4    1828 Superclass Gnathostomata    #>  5   11676 Superclass Pisces           #>  6   10193 Class      Elasmobranchii   #>  7  368407 Subclass   Neoselachii      #>  8  368408 Infraclass Selachii         #>  9  368410 Superorder Galeomorphi      #> 10   10208 Order      Orectolobiformes #> 11  105706 Family     Rhincodontidae"},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"synonyms","dir":"Articles","previous_headings":"","what":"Synonyms","title":"Introduction to worrms","text":"Get synonyms AphiaID","code":"wm_synonyms(id = 105706) #> # A tibble: 1 x 27 #>   AphiaID url   scientificname authority status unacceptreason taxonRankID rank  #>     <int> <chr> <chr>          <chr>     <chr>  <chr>                <int> <chr> #> 1  148832 http… Rhiniodontidae Müller &… unacc… synonym                140 Fami… #> # … with 19 more variables: valid_AphiaID <int>, valid_name <chr>, #> #   valid_authority <chr>, parentNameUsageID <int>, kingdom <chr>, #> #   phylum <chr>, class <chr>, order <chr>, family <chr>, genus <lgl>, #> #   citation <chr>, lsid <chr>, isMarine <lgl>, isBrackish <lgl>, #> #   isFreshwater <lgl>, isTerrestrial <lgl>, isExtinct <lgl>, match_type <chr>, #> #   modified <chr>"},{"path":"https://docs.ropensci.org/worrms/articles/worrms.html","id":"attributes-i-e--traits","dir":"Articles","previous_headings":"","what":"attributes (i.e., traits)","title":"Introduction to worrms","text":"attribute definition ID attribute data AphiaID attributes grouped CategoryID AphiaIDs attribute definition ID","code":"wm_attr_def(id = 1) #> # A tibble: 1 x 4 #>   measurementTypeID measurementType        CategoryID children         #>               <int> <chr>                       <int> <list>           #> 1                 1 IUCN Red List Category          1 <df[,4] [2 × 4]> wm_attr_data(id = 127160) #> # A tibble: 24 x 10 #>    AphiaID measurementType… measurementType measurementValue source_id reference #>    <chr>              <int> <chr>           <chr>                <int> <chr>     #>  1 127160                23 Species import… FAO-ASFIS: Spec…    197354 \"FAO Fis… #>  2 127160                23 Species import… MSFD indicators     197546 \"Daniel … #>  3 127160                23 Species import… MSFD indicators     197549 \"ICES. 2… #>  4 127160                23 Species import… MSFD indicators     197615 \"List of… #>  5 127160                23 Species import… MSFD indicators     197615 \"List of… #>  6 127160                23 Species import… MSFD indicators     197615 \"List of… #>  7 127160                23 Species import… MSFD indicators     197615 \"List of… #>  8 127160                23 Species import… MSFD indicators     197616 \"List of… #>  9 127160                23 Species import… MSFD indicators     197616 \"List of… #> 10 127160                23 Species import… MSFD indicators     197549 \"ICES. 2… #> # … with 14 more rows, and 4 more variables: qualitystatus <chr>, #> #   AphiaID_Inherited <int>, CategoryID <int>, children <list> wm_attr_category(id = 7) #> # A tibble: 6 x 4 #>   measurementValueID measurementValue measurementValueCode children         #>                <int> <chr>            <chr>                <list>           #> 1                183 benthos          <NA>                 <df[,4] [8 × 4]> #> 2                184 plankton         <NA>                 <df[,4] [7 × 4]> #> 3                194 nekton           <NA>                 <df[,0] [0 × 0]> #> 4                323 neuston          <NA>                 <df[,0] [0 × 0]> #> 5                378 edaphofauna      <NA>                 <df[,4] [2 × 4]> #> 6                331 not applicable   N/A                  <df[,0] [0 × 0]> wm_attr_aphia(id = 4) #> # A tibble: 50 x 2 #>    AphiaID Attributes         #>      <int> <list>             #>  1      11 <df[,10] [1 × 10]> #>  2      55 <df[,10] [2 × 10]> #>  3      57 <df[,10] [2 × 10]> #>  4      58 <df[,10] [2 × 10]> #>  5      59 <df[,10] [2 × 10]> #>  6      63 <df[,10] [2 × 10]> #>  7      64 <df[,10] [2 × 10]> #>  8      69 <df[,10] [2 × 10]> #>  9      90 <df[,10] [2 × 10]> #> 10      91 <df[,10] [2 × 10]> #> # … with 40 more rows"},{"path":"https://docs.ropensci.org/worrms/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Scott Chamberlain. Author. Bart Vanhoorne.. Author, maintainer.","code":""},{"path":"https://docs.ropensci.org/worrms/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Chamberlain S, Vanhoorne. B (2024). worrms: World Register Marine Species (WoRMS) Client. R package version 0.4.3, https://github.com/ropensci/worrms (devel), https://taxize.dev (user manual), https://docs.ropensci.org/worrms/.","code":"@Manual{,   title = {worrms: World Register of Marine Species (WoRMS) Client},   author = {Scott Chamberlain and Bart Vanhoorne.},   year = {2024},   note = {R package version 0.4.3, https://github.com/ropensci/worrms (devel), https://taxize.dev (user manual)},   url = {https://docs.ropensci.org/worrms/}, }"},{"path":"https://docs.ropensci.org/worrms/index.html","id":"worrms","dir":"","previous_headings":"","what":"World Register of Marine Species (WoRMS) Client","title":"World Register of Marine Species (WoRMS) Client","text":"worrms R client World Register Marine Species World Register Marine Species (WoRMS) https://www.marinespecies.org/ WoRMS REST API docs: https://www.marinespecies.org/rest/ See taxize book (https://taxize.dev) taxonomically focused work similar packages.","code":""},{"path":"https://docs.ropensci.org/worrms/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"World Register of Marine Species (WoRMS) Client","text":"stable CRAN version Development version","code":"install.packages(\"worrms\") remotes::install_github(\"ropensci/worrms\")  library(\"worrms\")"},{"path":"https://docs.ropensci.org/worrms/index.html","id":"meta","dir":"","previous_headings":"","what":"Meta","title":"World Register of Marine Species (WoRMS) Client","text":"Please report issues bugs. License: MIT Get citation information worrms R citation(package = 'worrms') Please note package released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":[]},{"path":[]},{"path":[]},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_aphia.html","id":null,"dir":"Reference","previous_headings":"","what":"Get AphiaIDs by attribute definition ID — wm_attr_aphia","title":"Get AphiaIDs by attribute definition ID — wm_attr_aphia","text":"Get AphiaIDs attribute definition ID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_aphia.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get AphiaIDs by attribute definition ID — wm_attr_aphia","text":"","code":"wm_attr_aphia(id, offset = 1, ...)  wm_attr_aphia_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_aphia.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get AphiaIDs by attribute definition ID — wm_attr_aphia","text":"id (numeric/integer) attribute ID. wm_attr_aphia required must length(id) == 1, wm_attr_aphia_ optional can length(id) >= 1 offset (integer) record start . default: 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_aphia.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get AphiaIDs by attribute definition ID — wm_attr_aphia","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_aphia.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get AphiaIDs by attribute definition ID — wm_attr_aphia","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_aphia.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get AphiaIDs by attribute definition ID — wm_attr_aphia","text":"","code":"if (FALSE) { wm_attr_aphia(id = 7) wm_attr_aphia(id = 4) wm_attr_aphia(id = 4, offset = 50)  wm_attr_aphia_(id = c(7, 2)) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_category.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attributes grouped by a CategoryID — wm_attr_category","title":"Get attributes grouped by a CategoryID — wm_attr_category","text":"Get attributes grouped CategoryID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_category.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attributes grouped by a CategoryID — wm_attr_category","text":"","code":"wm_attr_category(id, ...)  wm_attr_category_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_category.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attributes grouped by a CategoryID — wm_attr_category","text":"id (numeric/integer) CategoryID. wm_attr_category required must length(id) == 1, wm_attr_category_ optional can length(id) >= 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_category.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attributes grouped by a CategoryID — wm_attr_category","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_category.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get attributes grouped by a CategoryID — wm_attr_category","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_category.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get attributes grouped by a CategoryID — wm_attr_category","text":"","code":"if (FALSE) { wm_attr_category(id = 7) wm_attr_category(id = 2)  wm_attr_category_(id = c(7, 2)) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attribute data by AphiaID — wm_attr_data","title":"Get attribute data by AphiaID — wm_attr_data","text":"Get attribute data AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attribute data by AphiaID — wm_attr_data","text":"","code":"wm_attr_data(id, include_inherited = FALSE, ...)  wm_attr_data_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attribute data by AphiaID — wm_attr_data","text":"id (numeric/integer) AphiaID. wm_attr_data required must length(id) == 1, wm_attr_data_ optional can length(id) >= 1 include_inherited (logical) Include attributes inherited parent taxon. Default: FALSE ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attribute data by AphiaID — wm_attr_data","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_data.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get attribute data by AphiaID — wm_attr_data","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get attribute data by AphiaID — wm_attr_data","text":"","code":"if (FALSE) { wm_attr_data(id = 127160) wm_attr_data(id = 126436)  wm_attr_data_(id = c(127160, 126436)) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_def.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attribute definition by ID — wm_attr_def","title":"Get attribute definition by ID — wm_attr_def","text":"Get attribute definition ID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_def.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attribute definition by ID — wm_attr_def","text":"","code":"wm_attr_def(id, include_inherited = FALSE, ...)  wm_attr_def_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_def.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attribute definition by ID — wm_attr_def","text":"id (numeric/integer) attribute ID. wm_attr_def required must length(id) == 1, wm_attr_def_ optional can length(id) >= 1 include_inherited (logical) Include attributes inherited parent taxon. Default: FALSE ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_def.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attribute definition by ID — wm_attr_def","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_def.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get attribute definition by ID — wm_attr_def","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_attr_def.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get attribute definition by ID — wm_attr_def","text":"","code":"if (FALSE) { wm_attr_def(id = 1) wm_attr_def(id = 4) wm_attr_def(id = 4, include_inherited = TRUE)  wm_attr_def_(id = c(4, 1)) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_children.html","id":null,"dir":"Reference","previous_headings":"","what":"Get children for an AphiaID — wm_children","title":"Get children for an AphiaID — wm_children","text":"Get children AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_children.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get children for an AphiaID — wm_children","text":"","code":"wm_children(id, marine_only = TRUE, offset = 1, ...)  wm_children_(id = NULL, name = NULL, marine_only = TRUE, offset = 1, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_children.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get children for an AphiaID — wm_children","text":"id (numeric/integer) AphiaID. wm_children required must length(id) == 1, wm_children_ optional can length(id) >= 1 marine_only (logical) marine . default: TRUE offset (integer) record start . default: 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_children.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get children for an AphiaID — wm_children","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_children.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get children for an AphiaID — wm_children","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_children.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get children for an AphiaID — wm_children","text":"","code":"if (FALSE) { wm_children(343613) wm_children(id = 105706) wm_children(id = 105706, FALSE) wm_children(id = 105706, offset = 5)  # plural version, via id or name wm_children_(id = c(105706, 343613)) wm_children_(name = c('Mesodesma', 'Leucophaeus')) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_classification.html","id":null,"dir":"Reference","previous_headings":"","what":"Get classification for an AphiaID — wm_classification","title":"Get classification for an AphiaID — wm_classification","text":"Get classification AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_classification.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get classification for an AphiaID — wm_classification","text":"","code":"wm_classification(id, ...)  wm_classification_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_classification.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get classification for an AphiaID — wm_classification","text":"id (numeric/integer) AphiaID. wm_children required must length(id) == 1, wm_children_ optional can length(id) >= 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_classification.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get classification for an AphiaID — wm_classification","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_classification.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get classification for an AphiaID — wm_classification","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_classification.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get classification for an AphiaID — wm_classification","text":"","code":"if (FALSE) { wm_classification(id = 105706) wm_classification(id = 126436)  wm_classification(254967) wm_classification(344089)  # plural version, via id or name wm_classification_(id = c(254967, 344089)) wm_classification_(name = c('Platanista gangetica', 'Leucophaeus scoresbii')) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_common_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get vernacular names from an AphiaID — wm_common_id","title":"Get vernacular names from an AphiaID — wm_common_id","text":"Get vernacular names AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_common_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get vernacular names from an AphiaID — wm_common_id","text":"","code":"wm_common_id(id, ...)  wm_common_id_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_common_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get vernacular names from an AphiaID — wm_common_id","text":"id (numeric/integer) AphiaID. wm_common_id required must length(id) == 1, wm_common_id_ optional can length(id) >= 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_common_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get vernacular names from an AphiaID — wm_common_id","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_common_id.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get vernacular names from an AphiaID — wm_common_id","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_common_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get vernacular names from an AphiaID — wm_common_id","text":"","code":"if (FALSE) { wm_common_id(id = 105706) wm_common_id(id = 156806) wm_common_id(id = 397065)  wm_common_id_(id = c(105706, 156806, 397065)) nms <- c(\"Rhincodontidae\", \"Mesodesma deauratum\", \"Cryptomya californica\") wm_common_id_(name = nms) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_distribution.html","id":null,"dir":"Reference","previous_headings":"","what":"Get distribution data by AphiaID — wm_distribution","title":"Get distribution data by AphiaID — wm_distribution","text":"Get distribution data AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_distribution.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get distribution data by AphiaID — wm_distribution","text":"","code":"wm_distribution(id, ...)  wm_distribution_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_distribution.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get distribution data by AphiaID — wm_distribution","text":"id (numeric/integer) AphiaID. wm_distribution required must length(id) == 1, wm_distribution_ optional can length(id) >= 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_distribution.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get distribution data by AphiaID — wm_distribution","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_distribution.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get distribution data by AphiaID — wm_distribution","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_distribution.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get distribution data by AphiaID — wm_distribution","text":"","code":"if (FALSE) { wm_distribution(id = 156806) wm_distribution(id = 126436)  wm_distribution_(id = c(156806, 126436)) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_external.html","id":null,"dir":"Reference","previous_headings":"","what":"Get an external ID via an AphiaID — wm_external","title":"Get an external ID via an AphiaID — wm_external","text":"Get external ID via AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_external.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get an external ID via an AphiaID — wm_external","text":"","code":"wm_external(id, type = \"tsn\", ...)  wm_external_(id = NULL, name = NULL, type = \"tsn\", ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_external.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get an external ID via an AphiaID — wm_external","text":"id (numeric/integer) AphiaID. wm_external required must length(id) == 1, wm_external_ optional can length(id) >= 1 type (character) type external id. one : tsn, bold, dyntaxa, eol, fishbase, iucn, lsid, ncbi, gisd. default: tsn ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_external.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get an external ID via an AphiaID — wm_external","text":"integer ID. using underscore method, list, named input IDs","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_external.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get an external ID via an AphiaID — wm_external","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_external.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get an external ID via an AphiaID — wm_external","text":"","code":"if (FALSE) { # by default, get a TSN (an ITIS code) wm_external(id = 1080)  ## get many wm_external_(id = c(1080, 126436))  # BOLD code wm_external(id = 278468, type = \"bold\")  # NCBI code wm_external(id = 278468, type = \"ncbi\")  # fishbase code wm_external(id = 278468, type = \"fishbase\")  # curl options library(crul) wm_external(id = 105706, verbose = TRUE) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_id2name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomic name for an AphiaID — wm_id2name","title":"Get taxonomic name for an AphiaID — wm_id2name","text":"Get taxonomic name AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_id2name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomic name for an AphiaID — wm_id2name","text":"","code":"wm_id2name(id, ...)  wm_id2name_(id, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_id2name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomic name for an AphiaID — wm_id2name","text":"id (numeric/integer) AphiaID, required. wm_id2name must length(id) == 1, wm_id2name_ can length(id) >= 1 ... named curl options. see curl::curl_options","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_id2name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomic name for an AphiaID — wm_id2name","text":"character string taxnomic name. using underscore method, list, named input IDs","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_id2name.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get taxonomic name for an AphiaID — wm_id2name","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_id2name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxonomic name for an AphiaID — wm_id2name","text":"","code":"if (FALSE) { wm_id2name(id = 105706) wm_id2name_(id = c(105706, 126436)) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_name2id.html","id":null,"dir":"Reference","previous_headings":"","what":"Get AphiaID from a taxonomic name — wm_name2id","title":"Get AphiaID from a taxonomic name — wm_name2id","text":"Get AphiaID taxonomic name","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_name2id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get AphiaID from a taxonomic name — wm_name2id","text":"","code":"wm_name2id(name, ...)  wm_name2id_(name, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_name2id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get AphiaID from a taxonomic name — wm_name2id","text":"name (character) taxonomic name, required. wm_name2id must length(name) == 1, wm_name2id_ can length(name) >= 1 ... named curl options. see curl::curl_options","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_name2id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get AphiaID from a taxonomic name — wm_name2id","text":"integer AphiaID. using underscore method, list, named input names","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_name2id.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get AphiaID from a taxonomic name — wm_name2id","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_name2id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get AphiaID from a taxonomic name — wm_name2id","text":"","code":"if (FALSE) { wm_name2id(name = \"Rhincodon\") wm_name2id_(name = c(\"Rhincodon\", \"Gadus morhua\")) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_ranks.html","id":null,"dir":"Reference","previous_headings":"","what":"Get taxonomic ranks by their identifier — wm_ranks","title":"Get taxonomic ranks by their identifier — wm_ranks","text":"Get taxonomic ranks identifier","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_ranks.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get taxonomic ranks by their identifier — wm_ranks","text":"","code":"wm_ranks_id(rank_id, id = NULL, offset = 1, ...)  wm_ranks_name(rank_name, id = NULL, offset = 1, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_ranks.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get taxonomic ranks by their identifier — wm_ranks","text":"rank_id (numeric/integer) rank identifier. length==1 id AphiaID. length==1 offset (integer) record start . default: 1 ... named curl options. see curl::curl_options rank_name (character) rank name. length==1","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_ranks.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get taxonomic ranks by their identifier — wm_ranks","text":"tibble/data.frame","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_ranks.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get taxonomic ranks by their identifier — wm_ranks","text":"","code":"if (FALSE) { wm_ranks_id(220) wm_ranks_id(180) wm_ranks_id(180, id = 4)  wm_ranks_name(\"genus\") wm_ranks_name(\"genus\", id = 4) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_record.html","id":null,"dir":"Reference","previous_headings":"","what":"Get complete AphiaRecord for an AphiaID — wm_record","title":"Get complete AphiaRecord for an AphiaID — wm_record","text":"Get complete AphiaRecord AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get complete AphiaRecord for an AphiaID — wm_record","text":"","code":"wm_record(id, ...)  wm_record_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_record.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get complete AphiaRecord for an AphiaID — wm_record","text":"id (numeric/integer) AphiaID. wm_record required must length(id) == 1, wm_record_ optional can length(id) >= 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get complete AphiaRecord for an AphiaID — wm_record","text":"named list. using underscore method, output named input ID, can separated list names","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get complete AphiaRecord for an AphiaID — wm_record","text":"wm_record_ defunct, wm_record can plural requests now","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get complete AphiaRecord for an AphiaID — wm_record","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get complete AphiaRecord for an AphiaID — wm_record","text":"","code":"if (FALSE) { wm_record(id = 105706) wm_record(id = c(105706, 126436)) wm_record_(id = c(105706, 126436)) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_record_by_external.html","id":null,"dir":"Reference","previous_headings":"","what":"Get record by external ID — wm_record_by_external","title":"Get record by external ID — wm_record_by_external","text":"Get record external ID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record_by_external.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get record by external ID — wm_record_by_external","text":"","code":"wm_record_by_external(id, type = \"tsn\", ...)  wm_record_by_external_(id = NULL, name = NULL, type = \"tsn\", ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_record_by_external.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get record by external ID — wm_record_by_external","text":"id (numeric/integer) AphiaID. wm_record_by_external required must length(id) == 1, wm_record_by_external_ optional can length(id) >= 1 type (character) type external id. one : tsn, bold, dyntaxa, eol, fishbase, iucn, lsid, ncbi, gisd. default: tsn ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record_by_external.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get record by external ID — wm_record_by_external","text":"named list. using underscore method, output named input ID, can separated list names","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record_by_external.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get record by external ID — wm_record_by_external","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_record_by_external.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get record by external ID — wm_record_by_external","text":"","code":"if (FALSE) { wm_record_by_external(id = 85257) wm_record_by_external(id = 159854)  wm_record_by_external_(id = c(85257, 159854)) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_common.html","id":null,"dir":"Reference","previous_headings":"","what":"Get records by vernacular name, optional fuzzy matching — wm_records_common","title":"Get records by vernacular name, optional fuzzy matching — wm_records_common","text":"Get records vernacular name, optional fuzzy matching","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_common.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get records by vernacular name, optional fuzzy matching — wm_records_common","text":"","code":"wm_records_common(name, fuzzy = FALSE, offset = 1, ...)  wm_records_common_(name, fuzzy = FALSE, offset = 1, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_common.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get records by vernacular name, optional fuzzy matching — wm_records_common","text":"name (character) species common name. required. wm_records_common must length(name) == 1; wm_records_common_ can length(name) >= 1 fuzzy (logical) fuzzy search. default: FALSE offset (integer) record start . default: 1 ... named curl options. see curl::curl_options","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_common.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get records by vernacular name, optional fuzzy matching — wm_records_common","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_common.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get records by vernacular name, optional fuzzy matching — wm_records_common","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_common.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get records by vernacular name, optional fuzzy matching — wm_records_common","text":"","code":"if (FALSE) { wm_records_common(name = 'dolphin') wm_records_common(name = 'clam')  wm_records_common_(name = c('dolphin', 'clam'))  wm_records_common(name = 'dolphin', fuzzy = TRUE) wm_records_common(name = 'clam', fuzzy = TRUE, offset = 5) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Get records by date — wm_records_date","title":"Get records by date — wm_records_date","text":"Get records date","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get records by date — wm_records_date","text":"","code":"wm_records_date(   start_date,   end_date = NULL,   marine_only = TRUE,   offset = 1,   ... )"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get records by date — wm_records_date","text":"start_date (character) start date. required. end_date (character) end date. optional marine_only (logical) marine . default: TRUE offset (integer) record start . default: 1 ... named curl options. see curl::curl_options","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get records by date — wm_records_date","text":"tibble/data.frame","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get records by date — wm_records_date","text":"","code":"if (FALSE) { a_date <- format(Sys.Date() - 1, \"%Y-%m-%dT%H:%M:%S+00:00\") wm_records_date(a_date) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Get records by single name, optional fuzzy matching — wm_records_name","title":"Get records by single name, optional fuzzy matching — wm_records_name","text":"Get records single name, optional fuzzy matching","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get records by single name, optional fuzzy matching — wm_records_name","text":"","code":"wm_records_name(name, fuzzy = TRUE, marine_only = TRUE, offset = 1, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get records by single name, optional fuzzy matching — wm_records_name","text":"name (character) taxonomic name, required. fuzzy (logical) fuzzy search. default: TRUE marine_only (logical) marine . default: TRUE offset (integer) record start . default: 1 ... named curl options. see curl::curl_options","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get records by single name, optional fuzzy matching — wm_records_name","text":"tibble/data.frame","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_name.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get records by single name, optional fuzzy matching — wm_records_name","text":"underscore method like functions package already plural version: wm_records_names()","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get records by single name, optional fuzzy matching — wm_records_name","text":"","code":"if (FALSE) { wm_records_name(name = 'Leucophaeus') wm_records_name(name = 'Leucophaeus', fuzzy = FALSE) wm_records_name(name = 'Leucophaeus', marine_only = FALSE) wm_records_name(name = 'Platanista', marine_only = FALSE) wm_records_name(name = 'Platanista', marine_only = FALSE, offset = 5) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_names.html","id":null,"dir":"Reference","previous_headings":"","what":"Get records for one or more taxonomic name(s) — wm_records_names","title":"Get records for one or more taxonomic name(s) — wm_records_names","text":"Get records one taxonomic name(s)","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_names.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get records for one or more taxonomic name(s) — wm_records_names","text":"","code":"wm_records_names(name, marine_only = TRUE, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_names.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get records for one or more taxonomic name(s) — wm_records_names","text":"name (character) start date. required. marine_only (logical) marine . default: TRUE ... named curl options. see curl::curl_options","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_names.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get records for one or more taxonomic name(s) — wm_records_names","text":"list tibble's/data.frame's, one input names","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_names.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get records for one or more taxonomic name(s) — wm_records_names","text":"underscore method like functions package plural version wm_records_name()","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_names.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get records for one or more taxonomic name(s) — wm_records_names","text":"","code":"if (FALSE) { wm_records_names(name = 'Leucophaeus scoresbii') wm_records_names(name = c('Leucophaeus scoresbii', 'Coryphaena')) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_rank.html","id":null,"dir":"Reference","previous_headings":"","what":"Get AphiaRecords for a given taxonRankID — wm_records_rank","title":"Get AphiaRecords for a given taxonRankID — wm_records_rank","text":"Get AphiaRecords given taxonRankID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_rank.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get AphiaRecords for a given taxonRankID — wm_records_rank","text":"","code":"wm_records_rank(rank_id, id = NULL, offset = 1, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_rank.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get AphiaRecords for a given taxonRankID — wm_records_rank","text":"rank_id (numeric/integer) rank id id (character) single AphiaID offset (integer) record start . default: 1 ... named curl options. see curl::curl_options","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_rank.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get AphiaRecords for a given taxonRankID — wm_records_rank","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_rank.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get AphiaRecords for a given taxonRankID — wm_records_rank","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_rank.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get AphiaRecords for a given taxonRankID — wm_records_rank","text":"","code":"if (FALSE) { wm_records_rank(rank_id = 180, id = 106776) wm_records_rank(rank_id = 180, id = 106776, offset = 50) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_taxamatch.html","id":null,"dir":"Reference","previous_headings":"","what":"Get records for one or more taxonomic name(s) using\nthe TAXAMATCH fuzzy matching algorithm — wm_records_taxamatch","title":"Get records for one or more taxonomic name(s) using\nthe TAXAMATCH fuzzy matching algorithm — wm_records_taxamatch","text":"Get records one taxonomic name(s) using TAXAMATCH fuzzy matching algorithm","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_taxamatch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get records for one or more taxonomic name(s) using\nthe TAXAMATCH fuzzy matching algorithm — wm_records_taxamatch","text":"","code":"wm_records_taxamatch(name, marine_only = TRUE, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_taxamatch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get records for one or more taxonomic name(s) using\nthe TAXAMATCH fuzzy matching algorithm — wm_records_taxamatch","text":"name (character) taxon name. required. marine_only (logical) marine . default: TRUE ... named curl options. see curl::curl_options","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_taxamatch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get records for one or more taxonomic name(s) using\nthe TAXAMATCH fuzzy matching algorithm — wm_records_taxamatch","text":"list tibble's/data.frame's, one input names","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_taxamatch.html","id":"note","dir":"Reference","previous_headings":"","what":"Note","title":"Get records for one or more taxonomic name(s) using\nthe TAXAMATCH fuzzy matching algorithm — wm_records_taxamatch","text":"underscore method like functions package function already accepts many names","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_records_taxamatch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get records for one or more taxonomic name(s) using\nthe TAXAMATCH fuzzy matching algorithm — wm_records_taxamatch","text":"","code":"if (FALSE) { wm_records_taxamatch(name = 'Leucophaeus') wm_records_taxamatch(name = c('Leucophaeus', 'Coryphaena')) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_sources.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sources for an AphiaID — wm_sources","title":"Get sources for an AphiaID — wm_sources","text":"Get sources AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_sources.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sources for an AphiaID — wm_sources","text":"","code":"wm_sources(id, ...)  wm_sources_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_sources.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sources for an AphiaID — wm_sources","text":"id (numeric/integer) AphiaID. wm_sources required must length(id) == 1, wm_sources_ optional can length(id) >= 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_sources.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sources for an AphiaID — wm_sources","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_sources.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get sources for an AphiaID — wm_sources","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_sources.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get sources for an AphiaID — wm_sources","text":"","code":"if (FALSE) { wm_sources(id = 105706) wm_sources_(id = 105706) wm_sources_(id = c(105706, 126436)) wm_sources_(name = c(\"Rhincodontidae\", \"Gadus morhua\")) }"},{"path":"https://docs.ropensci.org/worrms/reference/wm_synonyms.html","id":null,"dir":"Reference","previous_headings":"","what":"Get synonyms for an AphiaID — wm_synonyms","title":"Get synonyms for an AphiaID — wm_synonyms","text":"Get synonyms AphiaID","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_synonyms.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get synonyms for an AphiaID — wm_synonyms","text":"","code":"wm_synonyms(id, offset = 1, ...)  wm_synonyms_(id = NULL, name = NULL, ...)"},{"path":"https://docs.ropensci.org/worrms/reference/wm_synonyms.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get synonyms for an AphiaID — wm_synonyms","text":"id (numeric/integer) AphiaID. wm_synonyms required must length(id) == 1, wm_synonyms_ optional can length(id) >= 1 offset (integer) record start . default: 1 ... named curl options. see curl::curl_options name (character) one taxonomic names. optional","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_synonyms.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get synonyms for an AphiaID — wm_synonyms","text":"tibble/data.frame. using underscore method, outputs input binded together, can split id column","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_synonyms.html","id":"singular-vs-plural","dir":"Reference","previous_headings":"","what":"Singular vs. plural","title":"Get synonyms for an AphiaID — wm_synonyms","text":"two sister functions, one without underscore original function wraps relavant WoRMS API method - accepts one thing (.e., name AphiaID) per request. sister function underscore end plural version, accepting one input. Internally function loops non-underscore method, labels output (whether list data.frame rows) input names IDs can easily parse output inputs.","code":""},{"path":"https://docs.ropensci.org/worrms/reference/wm_synonyms.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get synonyms for an AphiaID — wm_synonyms","text":"","code":"if (FALSE) { wm_synonyms(id = 105706) wm_synonyms_(id = 105706) wm_synonyms(id = 126436) wm_synonyms(id = 126436, offset = 10) wm_synonyms_(id = c(105706, 126436)) }"},{"path":"https://docs.ropensci.org/worrms/reference/worrms-package.html","id":null,"dir":"Reference","previous_headings":"","what":"worrms — worrms-package","title":"worrms — worrms-package","text":"World Register Marine Species Client","code":""},{"path":"https://docs.ropensci.org/worrms/reference/worrms-package.html","id":"fail-behavior","dir":"Reference","previous_headings":"","what":"Fail behavior","title":"worrms — worrms-package","text":"WoRMS REST API sophisticated error messaging, errors result (204) - Content (400) - Bad Request WoRMS comprehensive error reporting, fair amount checking user inputs help prevent errors meaningless user. Let us know can improve .","code":""},{"path":"https://docs.ropensci.org/worrms/reference/worrms-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"worrms — worrms-package","text":"Scott Chamberlain myrmecocystus@gmail.com","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"worrms-043","dir":"Changelog","previous_headings":"","what":"worrms 0.4.3","title":"worrms 0.4.3","text":"CRAN release: 2023-06-20 New maintainer: Bart Vanhoorne bartv@vliz.","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"minor-improvements-0-4-3","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"worrms 0.4.3","text":"functions wm_records_names() wm_records_taxamatch() now return always list (#41) fix note cran LazyData (e5ba9f)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"bug-fixes-0-4-3","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"worrms 0.4.3","text":"fuzzy search option removed wm_records_names() stay sync underlying web service (#26)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"worrms-042","dir":"Changelog","previous_headings":"","what":"worrms 0.4.2","title":"worrms 0.4.2","text":"CRAN release: 2020-07-08","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"minor-improvements-0-4-2","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"worrms 0.4.2","text":"fix failing tests cran (#22)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"worrms-040","dir":"Changelog","previous_headings":"","what":"worrms 0.4.0","title":"worrms 0.4.0","text":"CRAN release: 2019-06-28","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"new-features-0-4-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"worrms 0.4.0","text":"new functions wm_ranks_id() wm_ranks_name() getting taxonomic ranks rank identifier rank name (#20) new function wm_records_rank() getting AphiaRecords given rank id (#20)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"minor-improvements-0-4-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"worrms 0.4.0","text":"wm_synonyms() gains offset parameter allow pagination (#20) tibble::as_data_frame() replaced tibble::as_tibble()","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"deprecated-and-defunct-0-4-0","dir":"Changelog","previous_headings":"","what":"DEPRECATED AND DEFUNCT","title":"worrms 0.4.0","text":"wm_record_() deprecated; wm_record() now handles 1 AphiaID’s","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"bug-fixes-0-4-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"worrms 0.4.0","text":"fix wm_children test failing cran checks (#21)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"worrms-032","dir":"Changelog","previous_headings":"","what":"worrms 0.3.2","title":"worrms 0.3.2","text":"CRAN release: 2019-01-04","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"minor-improvements-0-3-2","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"worrms 0.3.2","text":"add link taxize book vignette README (#12)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"bug-fixes-0-3-2","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"worrms 0.3.2","text":"fix bug test regarding date (#19)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"worrms-030","dir":"Changelog","previous_headings":"","what":"worrms 0.3.0","title":"worrms 0.3.0","text":"CRAN release: 2018-11-07","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"minor-improvements-0-3-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"worrms 0.3.0","text":"fix functions throughout package (two versions, without underscore): underscore versions functions now error input found, instead warn user move - facilitate working many inputs. non-underscore version function still accepts 1 input errors give 1 (#14) (#18)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"bug-fixes-0-3-0","dir":"Changelog","previous_headings":"","what":"BUG FIXES","title":"worrms 0.3.0","text":"make sure functions accept 1 input first parameter error well informative message (#15)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"worrms-028","dir":"Changelog","previous_headings":"","what":"worrms 0.2.8","title":"worrms 0.2.8","text":"CRAN release: 2018-05-21","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"new-features-0-2-8","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"worrms 0.2.8","text":"Integration vcr webmockr packages unit test stubbing gains new functions getting WORMS traits data (call “attributes”): wm_attr_aphia, wm_attr_aphia_, wm_attr_category, wm_attr_category_, wm_attr_data, wm_attr_data_, wm_attr_def, wm_attr_def_ (#3)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"worrms-020","dir":"Changelog","previous_headings":"","what":"worrms 0.2.0","title":"worrms 0.2.0","text":"CRAN release: 2017-08-24","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"new-features-0-2-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"worrms 0.2.0","text":"Added additional sister functions exported functions package, trailing underscore. example, wm_children wm_children_. underscore methods take many inputs, typically AphiaID taxonomic vernacular name. decided make separate functions minimize disturbance existing package API. (#4) (#6)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"minor-improvements-0-2-0","dir":"Changelog","previous_headings":"","what":"MINOR IMPROVEMENTS","title":"worrms 0.2.0","text":"Moved using markdown docs (#5) functions now state return (#9)","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"worrms-010","dir":"Changelog","previous_headings":"","what":"worrms 0.1.0","title":"worrms 0.1.0","text":"CRAN release: 2017-01-14","code":""},{"path":"https://docs.ropensci.org/worrms/news/index.html","id":"new-features-0-1-0","dir":"Changelog","previous_headings":"","what":"NEW FEATURES","title":"worrms 0.1.0","text":"Released CRAN.","code":""}]
